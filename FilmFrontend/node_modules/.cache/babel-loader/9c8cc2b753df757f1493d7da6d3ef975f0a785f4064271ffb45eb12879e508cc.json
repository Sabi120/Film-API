{"ast":null,"code":"var _jsxFileName = \"/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/components/FilmTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap';\nimport AppNavbar from './Navbar';\nimport { Link } from 'react-router-dom';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormatContext from '../util/FormatContext';\nimport '../css/button-styles.css';\n\n/**\n * The FilmTable component contains the functionality of the film table\n *\n * @component\n * @returns {ReactElement} JSX that renders the Navigation Bar, a table listing the films, and a form for searching films.\n *\n * The FilmTable component performs the following:\n * \n * - useState -  for managing state for the films, loading status, search input, and filtering the films.\n * - useEffect -  for fetching films from the API.\n * - useContext -  for accessing the format context.\n * - handleSearch - to update the search input.\n * - handleSearchSubmit -  to send a search request to the API and update the filtered films state.\n * - clear - to clear the search input and reset the filtered films state.\n * - fetchFilms -  (inside the `useEffect` hook) to fetch films from the API in different formats,update the films and filtered films state.\n * - remove -  to send a delete request to the API and update the states of the film table.\n * - edit - redirects to the update page to send a put request to the API to update a film\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilmTable = () => {\n  _s();\n  const {\n    format\n  } = useContext(FormatContext);\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // search\n  const [searchInput, setSearchInput] = useState('');\n  const [filteredFilms, setFilteredFilms] = useState([]);\n  const [searchType, setSearchType] = useState(\"title\");\n  const handleSearch = e => {\n    setSearchInput(e.target.value);\n  };\n\n  // const handleSearchSubmit = (e) => {\n  //   e.preventDefault();\n\n  //   const searchText = searchInput.toLowerCase();\n\n  //   fetch(`FilmAPI/filmapi?${searchType}=${searchText}`, {\n  //     headers: {\n  //       Accept: \"application/json\",\n  //     },\n  //     mode: \"cors\",\n  //   })\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setFilteredFilms(data);\n  //     });\n  // };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    const searchText = searchInput.toLowerCase();\n    let accept = \"application/json\";\n    if (format === \"xml\") {\n      accept = \"application/xml\";\n    } else if (format === \"text\") {\n      accept = \"text/plain\";\n    }\n    fetch(`FilmAPI/filmapi?${searchType}=${searchText}&format=${format}`, {\n      headers: {\n        Accept: accept\n      },\n      mode: \"cors\"\n    }).then(async response => {\n      // handle different response formats\n\n      if (!response.ok) {\n        throw new Error(`Request failed with status ${response.status}`);\n      }\n      if (format === \"json\") {\n        const text = await response.text();\n\n        // Check if the response body is empty or contains only spaces\n        if (text.trim().length === 0) {\n          return [];\n        }\n        return JSON.parse(text);\n      } else if (format === \"xml\") {\n        const text = await response.text();\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(text, \"text/xml\");\n        const films = xmlDoc.getElementsByTagName(\"Film\");\n        const data = Array.from(films).map(film => {\n          return {\n            id: parseInt(film.getElementsByTagName(\"id\")[0].textContent),\n            title: film.getElementsByTagName(\"title\")[0].textContent,\n            year: parseInt(film.getElementsByTagName(\"year\")[0].textContent),\n            director: film.getElementsByTagName(\"director\")[0].textContent,\n            stars: film.getElementsByTagName(\"stars\")[0].textContent,\n            review: film.getElementsByTagName(\"review\")[0].textContent\n          };\n        });\n        return data;\n      } else {\n        const text = await response.text();\n        const films = text.trim().split(\"|\").filter(Boolean);\n        const data = films.map(film => {\n          const [id, title, year, director, stars, review] = film.split(\"#\");\n          return {\n            id: parseInt(id),\n            title,\n            year: parseInt(year),\n            director,\n            stars,\n            review\n          };\n        });\n        return data;\n      }\n    }).then(data => {\n      setFilteredFilms(data);\n    }).catch(error => {\n      // Handle the error\n      console.error('Error:', error.message);\n      setFilteredFilms([]);\n    });\n  };\n\n  // clear search \n  const clear = () => {\n    setSearchInput('');\n    setFilteredFilms(groups);\n  };\n\n  // get films and parse for the table for json, xml + text\n  useEffect(() => {\n    console.log(\"Fetching Films in \", format);\n    const fetchFilms = async format => {\n      setLoading(true);\n\n      // set accept\n      let accept = \"application/json\";\n      if (format === \"xml\") {\n        accept = \"application/xml\";\n      } else if (format === \"text\") {\n        accept = \"text/plain\";\n      }\n\n      // parse in different formats\n      fetch(\"FilmAPI/filmapi\", {\n        headers: {\n          Accept: accept\n        },\n        mode: \"cors\"\n      }).then(async response => {\n        if (format === \"text\") {\n          const text = await response.text();\n          const films = text.trim().split(\"|\").filter(Boolean);\n          const data = films.map(film => {\n            const [id, title, year, director, stars, review] = film.split(\"#\");\n            return {\n              id: parseInt(id),\n              title,\n              year: parseInt(year),\n              director,\n              stars,\n              review\n            };\n          });\n          console.log(\"Text Table\");\n          return data;\n        } else if (format === \"xml\") {\n          const xmlData = await response.text();\n          const parser = new DOMParser();\n          const xmlDoc = parser.parseFromString(xmlData, \"application/xml\");\n          const films = xmlDoc.getElementsByTagName(\"Film\");\n          const data = Array.from(films).map(film => {\n            return {\n              id: parseInt(film.getElementsByTagName(\"id\")[0].textContent),\n              title: film.getElementsByTagName(\"title\")[0].textContent,\n              year: film.getElementsByTagName(\"year\")[0].textContent,\n              director: film.getElementsByTagName(\"director\")[0].textContent,\n              stars: film.getElementsByTagName(\"stars\")[0].textContent,\n              review: film.getElementsByTagName(\"review\")[0].textContent\n            };\n          });\n          console.log(\"XML Table\");\n          return data;\n        } else {\n          console.log(\"JSON Table\");\n          return response.json();\n        }\n      }).then(data => {\n        setGroups(data);\n        setFilteredFilms(data);\n        setLoading(false);\n      });\n    };\n    fetchFilms(format);\n  }, [format]);\n\n  // delete\n  const remove = async (id, format) => {\n    let body = Request.body;\n    let accept = \"application/json\";\n    console.log(\"Deleted in \", FormatContext.format);\n    format = FormatContext.format;\n    if (format === \"xml\") {\n      console.log(\"format === xml\");\n      accept = \"application/xml\";\n      body = `<Film><id>${id}</id></Film>`;\n    } else if (format === \"text\") {\n      console.log(\"format === text\");\n      accept = \"text/plain\";\n      body = `${id}#`;\n    } else {\n      console.log(\"format === json\");\n      accept = \"application/json\";\n      body = JSON.stringify({\n        'id': id\n      });\n    }\n    await fetch(`/FilmAPI/filmapi`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': accept,\n        'Content-Type': accept\n      },\n      body: body\n    }).then(() => {\n      let updatedGroups = [...groups].filter(i => i.id !== id);\n      setGroups(updatedGroups);\n      setFilteredFilms(updatedGroups);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center d-flex align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"pt-3\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: \"shadow\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            sx: {\n              \"& th\": {\n                color: \"white\",\n                backgroundColor: \"#212529\"\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Director\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Stars\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  width: \"400px\"\n                },\n                align: \"right\",\n                className: \"justify-content-right align-items-center pb-0 pe-0\",\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: handleSearchSubmit,\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"row d-flex justify-content-end align-items-center pe-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-3\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"select\",\n                        value: searchType,\n                        onChange: e => setSearchType(e.target.value),\n                        className: \"pe-0 ps-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"title\",\n                          children: \"Title\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 327,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"year\",\n                          children: \"Year\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 328,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"id\",\n                          children: \"ID\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 329,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"all\",\n                          children: \"All\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 330,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-4 ms-0 ps-0\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        name: \"searchTerm\",\n                        id: \"searchTerm\",\n                        value: searchInput,\n                        onChange: handleSearch,\n                        placeholder: \"Search...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"col-auto me-2 pb-6 pb-2 align-items-center ps-3 pe-3\",\n                      type: \"submit\",\n                      color: \"danger\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"16\",\n                        height: \"16\",\n                        fill: \"currentColor\",\n                        className: \"bi bi-search-heart-fill\",\n                        viewBox: \"0 0 16 16\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M6.5 13a6.474 6.474 0 0 0 3.845-1.258h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.008 1.008 0 0 0-.115-.1A6.471 6.471 0 0 0 13 6.5 6.502 6.502 0 0 0 6.5 0a6.5 6.5 0 1 0 0 13Zm0-8.518c1.664-1.673 5.825 1.254 0 5.018-5.825-3.764-1.664-6.69 0-5.018Z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"col-auto me-2 pb-6 pb-2 align-items-center ps-3 pe-3\",\n                      onClick: clear,\n                      color: \"danger\",\n                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"16\",\n                        height: \"16\",\n                        fill: \"currentColor\",\n                        className: \"bi bi-x-circle-fill\",\n                        viewBox: \"0 0 16 16\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  backgroundColor: \"#212529\",\n                  width: \"2px\"\n                },\n                className: \"ps-0 pe-0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: filteredFilms.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.director\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.stars\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                colSpan: 2,\n                children: row.review\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"optionsShadow\",\n                  title: \"Update\",\n                  size: \"sm\",\n                  color: \"white\",\n                  tag: Link,\n                  to: \"/films/\" + row.id,\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"\\u270D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"optionsShadow\",\n                  title: \"Delete\",\n                  size: \"sm\",\n                  color: \"white\",\n                  starticon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 105\n                  }, this),\n                  onClick: () => remove(row.id),\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(FilmTable, \"7Qdu7CVRCF/83hChNbcMymj2t+4=\");\n_c = FilmTable;\nexport default FilmTable;\nvar _c;\n$RefreshReg$(_c, \"FilmTable\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Button","Container","Form","FormGroup","Input","AppNavbar","Link","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DeleteIcon","CircularProgress","FormatContext","FilmTable","format","groups","setGroups","loading","setLoading","searchInput","setSearchInput","filteredFilms","setFilteredFilms","searchType","setSearchType","handleSearch","e","target","value","handleSearchSubmit","preventDefault","searchText","toLowerCase","accept","fetch","headers","Accept","mode","then","response","ok","Error","status","text","trim","length","JSON","parse","parser","DOMParser","xmlDoc","parseFromString","films","getElementsByTagName","data","Array","from","map","film","id","parseInt","textContent","title","year","director","stars","review","split","filter","Boolean","catch","error","console","message","clear","log","fetchFilms","xmlData","json","remove","body","Request","stringify","method","updatedGroups","i","minWidth","color","backgroundColor","width","row","border"],"sources":["/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/components/FilmTable.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap';\nimport AppNavbar from './Navbar';\nimport { Link } from 'react-router-dom';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormatContext from '../util/FormatContext';\nimport '../css/button-styles.css';\n\n\n/**\n * The FilmTable component contains the functionality of the film table\n *\n * @component\n * @returns {ReactElement} JSX that renders the Navigation Bar, a table listing the films, and a form for searching films.\n *\n * The FilmTable component performs the following:\n * \n * - useState -  for managing state for the films, loading status, search input, and filtering the films.\n * - useEffect -  for fetching films from the API.\n * - useContext -  for accessing the format context.\n * - handleSearch - to update the search input.\n * - handleSearchSubmit -  to send a search request to the API and update the filtered films state.\n * - clear - to clear the search input and reset the filtered films state.\n * - fetchFilms -  (inside the `useEffect` hook) to fetch films from the API in different formats,update the films and filtered films state.\n * - remove -  to send a delete request to the API and update the states of the film table.\n * - edit - redirects to the update page to send a put request to the API to update a film\n */\nconst FilmTable = () => {\n\n  const { format } = useContext(FormatContext);\n  \n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // search\n  const [searchInput, setSearchInput] = useState('');\n  const [filteredFilms, setFilteredFilms] = useState([]);\n  const [searchType, setSearchType] = useState(\"title\");\n\n  const handleSearch = (e) => {\n    setSearchInput(e.target.value);\n  };\n\n  // const handleSearchSubmit = (e) => {\n  //   e.preventDefault();\n  \n  //   const searchText = searchInput.toLowerCase();\n  \n  //   fetch(`FilmAPI/filmapi?${searchType}=${searchText}`, {\n  //     headers: {\n  //       Accept: \"application/json\",\n  //     },\n  //     mode: \"cors\",\n  //   })\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setFilteredFilms(data);\n  //     });\n  // };\n\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n  \n    const searchText = searchInput.toLowerCase();\n  \n    let accept = \"application/json\";\n\n    if (format === \"xml\") {\n      accept = \"application/xml\";\n    } else if (format === \"text\") {\n      accept = \"text/plain\";\n    }\n  \n    fetch(`FilmAPI/filmapi?${searchType}=${searchText}&format=${format}`, {\n      headers: {\n        Accept: accept,\n      },\n      mode: \"cors\",\n    })\n      .then(async (response) => {\n        // handle different response formats\n\n        if (!response.ok) {\n          throw new Error(`Request failed with status ${response.status}`);\n        }\n\n        if (format === \"json\") {\n          const text = await response.text();\n\n          // Check if the response body is empty or contains only spaces\n          if (text.trim().length === 0) {\n            return [];\n          }\n    \n          return JSON.parse(text);\n        } \n        \n        else if (format === \"xml\") {\n          const text = await response.text();\n          const parser = new DOMParser();\n          const xmlDoc = parser.parseFromString(text, \"text/xml\");\n          const films = xmlDoc.getElementsByTagName(\"Film\");\n          const data = Array.from(films).map((film) => {\n            return {\n              id: parseInt(film.getElementsByTagName(\"id\")[0].textContent),\n              title: film.getElementsByTagName(\"title\")[0].textContent,\n              year: parseInt(film.getElementsByTagName(\"year\")[0].textContent),\n              director: film.getElementsByTagName(\"director\")[0].textContent,\n              stars: film.getElementsByTagName(\"stars\")[0].textContent,\n              review: film.getElementsByTagName(\"review\")[0].textContent,\n            };\n          });\n          return data;\n        } \n        \n        else { \n          const text = await response.text();\n          const films = text.trim().split(\"|\").filter(Boolean);\n          const data = films.map((film) => {\n            const [id, title, year, director, stars, review] = film.split(\"#\");\n            return {\n              id: parseInt(id),\n              title,\n              year: parseInt(year),\n              director,\n              stars,\n              review,\n            };\n          });\n          return data;\n        }\n      })\n      .then((data) => {\n        setFilteredFilms(data);\n      })\n      .catch((error) => {\n        // Handle the error\n        console.error('Error:', error.message);\n        setFilteredFilms([]);\n      });\n  };\n  \n\n \n\n  // clear search \n  const clear = () => {\n    setSearchInput('');\n    setFilteredFilms(groups);\n  };\n\n  // get films and parse for the table for json, xml + text\n  useEffect(() => {\n    console.log(\"Fetching Films in \",format);\n    const fetchFilms = async (format) => {\n      setLoading(true);\n    \n      // set accept\n      let accept = \"application/json\";\n      if (format === \"xml\") {\n        accept = \"application/xml\";\n      } else if (format === \"text\") {\n        accept = \"text/plain\";\n      }\n    \n      // parse in different formats\n      fetch(\"FilmAPI/filmapi\", {\n        headers: {\n          Accept: accept,\n        },\n        mode: \"cors\",\n      })\n        .then(async (response) => {\n\n          if (format === \"text\") {\n            const text = await response.text();\n            const films = text.trim().split(\"|\").filter(Boolean);\n            const data = films.map((film) => {\n              const [\n                id,\n                title,\n                year,\n                director,\n                stars,\n                review,\n              ] = film.split(\"#\");\n              return {\n                id: parseInt(id),\n                title,\n                year: parseInt(year),\n                director,\n                stars,\n                review,\n              };\n            });\n            console.log(\"Text Table\");\n            return data;\n            \n    \n          } else if (format === \"xml\") {\n            const xmlData = await response.text();\n            const parser = new DOMParser();\n            const xmlDoc = parser.parseFromString(xmlData, \"application/xml\");\n    \n            const films = xmlDoc.getElementsByTagName(\"Film\");\n            const data = Array.from(films).map((film) => {\n\n              return {\n                id: parseInt(film.getElementsByTagName(\"id\")[0].textContent),\n                title: film.getElementsByTagName(\"title\")[0].textContent,\n                year: film.getElementsByTagName(\"year\")[0].textContent,\n                director: film.getElementsByTagName(\"director\")[0].textContent,\n                stars: film.getElementsByTagName(\"stars\")[0].textContent,\n                review: film.getElementsByTagName(\"review\")[0].textContent,\n              };\n\n            });\n            console.log(\"XML Table\");\n            return data;\n          } \n          else {\n            console.log(\"JSON Table\");\n            return response.json();\n          }\n        })\n        .then((data) => {\n          setGroups(data);\n          setFilteredFilms(data);\n          setLoading(false);\n\n        });\n    };\n  \n    fetchFilms(format);\n  }, [format]);\n\n  // delete\n  const remove = async (id, format) => {\n    let body = Request.body;\n    let accept = \"application/json\";\n    console.log(\"Deleted in \",FormatContext.format);\n    format = FormatContext.format\n    if (format === \"xml\") {\n      console.log(\"format === xml\");\n      accept = \"application/xml\";\n      body = `<Film><id>${id}</id></Film>`;\n    } \n    \n    else if (format === \"text\") {\n      console.log(\"format === text\");\n      accept = \"text/plain\";\n      body = `${id}#`;\n    }\n    \n    else {\n      console.log(\"format === json\");\n      accept = \"application/json\";\n      body = JSON.stringify({'id': id});\n    }\n  \n    await fetch(`/FilmAPI/filmapi`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': accept,\n        'Content-Type': accept\n      },\n      body: body\n    }).then(() => {\n      let updatedGroups = [...groups].filter(i => i.id !== id);\n      setGroups(updatedGroups);\n      setFilteredFilms(updatedGroups);\n    });\n  }\n\n\n  if (loading) {\n\n    return (\n      <div className='d-flex justify-content-center d-flex align-items-center'>\n        <CircularProgress color = \"error\"/>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <AppNavbar />\n      <Container fluid className = \"pt-3\">\n\n        <TableContainer component={Paper} className='shadow'>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead\n             sx={{\n              \"& th\": {\n                color: \"white\",\n                backgroundColor: \"#212529\"\n              }\n            }}>\n              <TableRow>\n                <TableCell><b>ID</b></TableCell>\n                <TableCell align=\"left\"><b>Title</b></TableCell>\n                <TableCell align=\"left\"><b>Year</b></TableCell>\n                <TableCell align=\"left\"><b>Director</b></TableCell>\n                <TableCell align=\"left\"><b>Stars</b></TableCell>\n                <TableCell align=\"left\"><b>Review</b></TableCell>\n                <TableCell  style = {{width: \"400px\"}} align=\"right\" className = \"justify-content-right align-items-center pb-0 pe-0\">\n\n                <Form onSubmit={handleSearchSubmit} className=\"row\">\n\n                  <FormGroup className=\"row d-flex justify-content-end align-items-center pe-0\">\n                    <div className = \"col-3\">\n                      <Input \n                          type=\"select\" \n                          value={searchType} \n                          onChange={(e) => setSearchType(e.target.value)}\n                          className='pe-0 ps-2'>\n                            <option value=\"title\">Title</option>\n                            <option value=\"year\">Year</option>\n                            <option value=\"id\">ID</option>\n                            <option value=\"all\">All</option>\n                      </Input>\n                    </div>\n\n                    <div className = \"col-4 ms-0 ps-0\">\n                      <Input \n                        type=\"text\" \n                        name=\"searchTerm\" \n                        id=\"searchTerm\" \n                        value={searchInput} \n                        onChange={handleSearch} placeholder=\"Search...\" \n                      />\n                    </div>\n\n                    <Button className=\"col-auto me-2 pb-6 pb-2 align-items-center ps-3 pe-3\" type=\"submit\" color=\"danger\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-search-heart-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"M6.5 13a6.474 6.474 0 0 0 3.845-1.258h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.008 1.008 0 0 0-.115-.1A6.471 6.471 0 0 0 13 6.5 6.502 6.502 0 0 0 6.5 0a6.5 6.5 0 1 0 0 13Zm0-8.518c1.664-1.673 5.825 1.254 0 5.018-5.825-3.764-1.664-6.69 0-5.018Z\" />\n                      </svg>\n                    </Button>\n\n                    <Button className=\"col-auto me-2 pb-6 pb-2 align-items-center ps-3 pe-3\" onClick = {clear} color=\"danger\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\">\n                      <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\n                    </svg>\n                    </Button>\n\n                    </FormGroup>\n                  </Form>  \n\n                </TableCell>\n\n                <TableCell style={{ backgroundColor: \"#212529\", width: \"2px\"}} className='ps-0 pe-0'></TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {filteredFilms.map((row) => (\n                <TableRow\n                  key={row.id}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.title}</TableCell>\n                  <TableCell align=\"left\">{row.year}</TableCell>\n                  <TableCell align=\"left\">{row.director}</TableCell>\n                  <TableCell align=\"left\">{row.stars}</TableCell>\n                  <TableCell align=\"left\" colSpan={2}>{row.review}</TableCell>\n\n                  <TableCell align=\"right\">\n                    <Button className=\"optionsShadow\" title=\"Update\" size=\"sm\" color=\"white\" tag={Link} to={\"/films/\" + row.id}>\n                      <h5>&#9997;</h5>\n                    </Button>\n                  \n \n                    <Button className=\"optionsShadow\" title=\"Delete\" size=\"sm\" color=\"white\" starticon={<DeleteIcon />} onClick={() => remove(row.id)}>\n                      <h5>&#10060;</h5>\n                    </Button>\n\n                  </TableCell>\n\n              \n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n      { }\n    </div>\n  );\n};\n\nexport default FilmTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}