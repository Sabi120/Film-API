{"ast":null,"code":"var _jsxFileName = \"/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Films from './Films';\nimport EditFilm from './CRUD';\nimport CRUD from './CRUD';\nimport { FormGroup, Input } from 'reactstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport AppContext from './AppContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"AppContext\", AppContext.format);\nconst App = () => {\n  _s();\n  const [format, setFormat] = useState('json');\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      format,\n      setFormat\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Films, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/films/:id\",\n          element: /*#__PURE__*/_jsxDEV(EditFilm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/films/add\",\n          element: /*#__PURE__*/_jsxDEV(CRUD, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"K/fvYEh72ap0R7QpPvBs8acKMRE=\");\n_c = App;\nconst Format = () => {\n  _s2();\n  //const [format, setFormat] = useState('format');\n  const {\n    format,\n    setFormat\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  const handleFormat = async event => {\n    console.log(\"Dropdown: \", event.target.value);\n    AppContext.format = event.target.value;\n    //added \n    setFormat(event.target.value);\n    await handleSubmit(event, event.target.value);\n  };\n\n  // changed this to call fetch everytime the dropdown is changed\n  // added selected format to update value correctly + removed <Form> as this is done by handleFormat\n  const handleSubmit = async (event, selectedFormat) => {\n    let accept = \"application/json\";\n    event.preventDefault();\n    if (selectedFormat === \"xml\") {\n      accept = \"application/xml\";\n    } else if (selectedFormat === \"text\") {\n      accept = \"text/plain\";\n    } else {\n      accept = \"application/json\";\n    }\n    await fetch(`/FilmAPI/filmapi`, {\n      method: \"GET\",\n      headers: {\n        Accept: accept,\n        \"Content-Type\": accept\n      }\n    });\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ms-4 me-3 row pt-4\",\n    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"formatType\",\n        value: format,\n        onChange: handleFormat,\n        className: \"pb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"json\",\n          children: \"JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"xml\",\n          children: \"XML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s2(Format, \"2kC70scdI0Ehj1Y8mxQN4dr3bEk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Format;\nexport { App, Format };\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Format\");","map":{"version":3,"names":["React","useState","useContext","BrowserRouter","Router","Route","Routes","Films","EditFilm","CRUD","FormGroup","Input","useNavigate","AppContext","console","log","format","App","setFormat","Format","navigate","handleFormat","event","target","value","handleSubmit","selectedFormat","accept","preventDefault","fetch","method","headers","Accept"],"sources":["/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/App.js"],"sourcesContent":["import React, { useState, useContext} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Films from './Films';\nimport EditFilm from './CRUD';\nimport CRUD from './CRUD';\n\n\nimport { FormGroup, Input } from 'reactstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport AppContext from './AppContext.js';\n\nconsole.log(\"AppContext\",AppContext.format);\nconst App = () => {\n\n  const [format, setFormat] = useState('json');\n\n  return (\n    <AppContext.Provider value={{ format, setFormat }}>\n      <Router>\n      <Routes>\n        <Route exact path=\"/\" element={<Films/>}/>\n        <Route path='/films/:id' element={<EditFilm/>}/>\n        <Route path='/films/add' element={<CRUD/>}/>\n      </Routes>\n    </Router>\n    </AppContext.Provider>\n  )\n}\n\nconst Format = () => {\n  //const [format, setFormat] = useState('format');\n  const { format, setFormat } = useContext(AppContext);\n  const navigate = useNavigate();\n\n  const handleFormat = async (event) => {\n    console.log(\"Dropdown: \", event.target.value);\n    AppContext.format = event.target.value;\n    //added \n    setFormat(event.target.value);\n    await handleSubmit(event, event.target.value);\n  };\n\n  // changed this to call fetch everytime the dropdown is changed\n  // added selected format to update value correctly + removed <Form> as this is done by handleFormat\n  const handleSubmit = async (event, selectedFormat) => {\n    let accept = \"application/json\";\n    event.preventDefault();  \n \n    if (selectedFormat === \"xml\")\n    {\n      accept = \"application/xml\";\n    }\n    else if (selectedFormat === \"text\")\n    {\n      accept = \"text/plain\";\n    }\n    else \n    {\n      accept = \"application/json\";\n    }\n\n\n   await fetch(`/FilmAPI/filmapi`, \n   {\n      method: \"GET\",\n      headers: {\n        Accept: accept,\n        \"Content-Type\": accept,\n      },\n      \n    })\n    \n\n    navigate(\"/\");\n\n  };\n\n  return (\n    <div className = \"ms-4 me-3 row pt-4\"> \n      <FormGroup>\n        <Input \n          type=\"select\" \n          name=\"formatType\" \n          value={format} \n          onChange={handleFormat}\n          className='pb-2'\n        >\n            <option value=\"json\">JSON</option>\n            <option value=\"xml\">XML</option>\n            <option value=\"text\">Text</option>\n        </Input>\n      </FormGroup>\n    </div>\n    \n  );\n};\n\nexport { App,Format };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}