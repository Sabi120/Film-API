{"ast":null,"code":"var _jsxFileName = \"/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/CRUD.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Button, Container, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport AppNavbar from \"./AppNavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilmEdit = () => {\n  _s();\n  const initialFormState = {\n    id: \"\",\n    title: \"\",\n    year: \"\",\n    director: \"\",\n    stars: \"\",\n    review: \"\"\n  };\n  const [group, setGroup] = useState(initialFormState);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [format, setFormat] = useState('format');\n\n  // setting values\n\n  // useEffect(() => {\n  //   fetch(`/FilmAPI/filmapi?id=${id}`)\n  //     .then((response) => response.json())\n  //     .then((group) => {\n  //       console.log('Film ID:', id);\n  //       console.log(\"Setting Values...\\n\",group)\n  //       setGroup({\n  //         id: group.id,\n  //         title: group.title,\n  //         year: group.year,\n  //         director: group.director,\n  //         stars: group.stars,\n  //         review: group.review,\n  //       });\n  //     });\n  // }, [id]);\n\n  const [idValue, setIdValue] = useState(\"\");\n  const [titleValue, setTitleValue] = useState(\"\");\n  const [yearValue, setYearValue] = useState(\"\");\n  const [directorValue, setDirectorValue] = useState(\"\");\n  const [starsValue, setStarsValue] = useState(\"\");\n  const [reviewValue, setReviewValue] = useState(\"\");\n  useEffect(() => {\n    if (id) {\n      fetch(`/FilmAPI/filmapi?id=${id}`).then(response => response.json()).then(group => {\n        console.log(\"Setting Values...\\n\", group);\n        setIdValue(group.id);\n        setTitleValue(group.title);\n        setYearValue(group.year);\n        setDirectorValue(group.director);\n        setStarsValue(group.stars);\n        setReviewValue(group.review);\n      });\n    }\n  }, []);\n\n  // const handleChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setGroup({ ...group, [name]: value });\n\n  // };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    switch (name) {\n      case \"id\":\n        setIdValue(value);\n        break;\n      case \"title\":\n        setTitleValue(value);\n        break;\n      case \"year\":\n        setYearValue(value);\n        break;\n      case \"director\":\n        setDirectorValue(value);\n        break;\n      case \"stars\":\n        setStarsValue(value);\n        break;\n      case \"review\":\n        setReviewValue(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleFormat = event => {\n    setFormat(event.target.value);\n  };\n  const handleSubmit = async event => {\n    let body = Request.body;\n    let accept = \"application/json\";\n    event.preventDefault();\n    if (format === \"xml\") {\n      console.log(\"XML Body\");\n      accept = \"application/xml\";\n      const React = require('react');\n      const ReactDomServer = require(\"react-dom/server\");\n      const Film = group => React.createElement(\"Film\", group);\n      var elementXML = ReactDomServer.renderToStaticMarkup( /*#__PURE__*/_jsxDEV(Film, {\n        children: [/*#__PURE__*/_jsxDEV(\"id\", {\n          children: group.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n          children: group.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"year\", {\n          children: group.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 113\n        }, this), /*#__PURE__*/_jsxDEV(\"director\", {\n          children: group.director\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 138\n        }, this), /*#__PURE__*/_jsxDEV(\"stars\", {\n          children: group.stars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 175\n        }, this), /*#__PURE__*/_jsxDEV(\"review\", {\n          children: group.review\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 203\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 60\n      }, this));\n      body = elementXML;\n\n      // without id\n\n      if (!id) {\n        const FilmWithoutId = group => React.createElement(\"Film\", {\n          ...group,\n          id: undefined\n        });\n        elementXML = ReactDomServer.renderToStaticMarkup( /*#__PURE__*/_jsxDEV(FilmWithoutId, {\n          children: [/*#__PURE__*/_jsxDEV(\"title\", {\n            children: group.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"year\", {\n            children: group.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"director\", {\n            children: group.director\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"stars\", {\n            children: group.stars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"review\", {\n            children: group.review\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this));\n      }\n    } else if (format === \"text\") {\n      accept = \"text/plain\";\n      const {\n        title,\n        year,\n        director,\n        stars,\n        review\n      } = group;\n      const bodyAsText = `${id}#${title}#${year}#${director}#${stars}#${review}|`;\n      body = bodyAsText;\n\n      // without id\n\n      if (!id) {\n        const {\n          title,\n          year,\n          director,\n          stars,\n          review\n        } = group;\n        body = `#${title}#${year}#${director}#${stars}#${review}|`;\n      }\n    } else {\n      body = JSON.stringify(group);\n\n      // without id\n      if (!id) {\n        const groupWithoutId = {\n          ...group\n        };\n        delete groupWithoutId.id;\n        body = JSON.stringify(groupWithoutId);\n      }\n    }\n    if (id) {\n      await fetch(`/FilmAPI/filmapi`, {\n        method: \"PUT\",\n        headers: {\n          Accept: accept,\n          \"Content-Type\": accept\n        },\n        body: body\n      });\n    } else {\n      await fetch(\"/FilmAPI/filmapi\", {\n        method: \"POST\",\n        headers: {\n          Accept: accept,\n          \"Content-Type\": accept\n        },\n        body: body\n      });\n    }\n    setGroup(initialFormState);\n    navigate(\"/\");\n  };\n  const ptitle = /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"d-flex justify-content-center pt-5 display-6\",\n    children: id ? \"Edit Film\" : \"Add Film\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 18\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [ptitle, /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        id: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"pt-4 pb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Format\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"format\",\n              onChange: handleFormat,\n              value: format,\n              className: \"ms-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"json\",\n                children: \"JSON\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"xml\",\n                children: \"XML\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"text\",\n                children: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), id && /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"id\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"id\",\n            id: \"id\",\n            value: idValue || \"\",\n            onChange: handleChange,\n            autoComplete: \"id\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"title\",\n            id: \"title\",\n            value: titleValue || \"\",\n            onChange: handleChange,\n            autoComplete: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"year\",\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"year\",\n            id: \"year\",\n            value: yearValue || \"\",\n            onChange: handleChange,\n            autoComplete: \"year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"director\",\n            children: \"Director\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"director\",\n            id: \"director\",\n            value: directorValue || \"\",\n            onChange: handleChange,\n            autoComplete: \"director\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"stars\",\n            children: \"Stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"stars\",\n            id: \"stars\",\n            value: starsValue || \"\",\n            onChange: handleChange,\n            autoComplete: \"stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"review\",\n            children: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"review\",\n            id: \"review\",\n            value: reviewValue || \"\",\n            onChange: handleChange,\n            autoComplete: \"review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            tag: Link,\n            to: \"/\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(FilmEdit, \"umhYVJjGaV4Ew0zD/e55WrD9N04=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = FilmEdit;\nexport default FilmEdit;\nvar _c;\n$RefreshReg$(_c, \"FilmEdit\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","Button","Container","Form","FormGroup","Input","Label","AppNavbar","FilmEdit","initialFormState","id","title","year","director","stars","review","group","setGroup","navigate","format","setFormat","idValue","setIdValue","titleValue","setTitleValue","yearValue","setYearValue","directorValue","setDirectorValue","starsValue","setStarsValue","reviewValue","setReviewValue","fetch","then","response","json","console","log","handleChange","event","name","value","target","handleFormat","handleSubmit","body","Request","accept","preventDefault","require","ReactDomServer","Film","createElement","elementXML","renderToStaticMarkup","FilmWithoutId","undefined","bodyAsText","JSON","stringify","groupWithoutId","method","headers","Accept","ptitle"],"sources":["/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/CRUD.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Button, Container, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport AppNavbar from \"./AppNavbar\";\n\nconst FilmEdit = () => {\n\n  const initialFormState = {\n    id: \"\",\n    title: \"\",\n    year: \"\",\n    director: \"\",\n    stars: \"\",\n    review: \"\",\n  };\n\n  const [group, setGroup] = useState(initialFormState);\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [format, setFormat] = useState('format');\n\n  // setting values\n    \n  // useEffect(() => {\n  //   fetch(`/FilmAPI/filmapi?id=${id}`)\n  //     .then((response) => response.json())\n  //     .then((group) => {\n  //       console.log('Film ID:', id);\n  //       console.log(\"Setting Values...\\n\",group)\n  //       setGroup({\n  //         id: group.id,\n  //         title: group.title,\n  //         year: group.year,\n  //         director: group.director,\n  //         stars: group.stars,\n  //         review: group.review,\n  //       });\n  //     });\n  // }, [id]);\n\nconst [idValue, setIdValue] = useState(\"\");\nconst [titleValue, setTitleValue] = useState(\"\");\nconst [yearValue, setYearValue] = useState(\"\");\nconst [directorValue, setDirectorValue] = useState(\"\");\nconst [starsValue, setStarsValue] = useState(\"\");\nconst [reviewValue, setReviewValue] = useState(\"\");\n\nuseEffect(() => {\n  if (id) {\n    fetch(`/FilmAPI/filmapi?id=${id}`)\n      .then((response) => response.json())\n      .then((group) => {\n        console.log(\"Setting Values...\\n\", group);\n        setIdValue(group.id);\n        setTitleValue(group.title);\n        setYearValue(group.year);\n        setDirectorValue(group.director);\n        setStarsValue(group.stars);\n        setReviewValue(group.review);\n      });\n  }\n}, []);\n\n\n\n\n\n  // const handleChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setGroup({ ...group, [name]: value });\n\n  // };\n\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"id\":\n        setIdValue(value);\n        break;\n      case \"title\":\n        setTitleValue(value);\n        break;\n      case \"year\":\n        setYearValue(value);\n        break;\n      case \"director\":\n        setDirectorValue(value);\n        break;\n      case \"stars\":\n        setStarsValue(value);\n        break;\n      case \"review\":\n        setReviewValue(value);\n        break;\n      default:\n        break;\n    }\n  };\n  \n\n  const handleFormat = (event) => {\n    setFormat(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    let body = Request.body;\n    let accept = \"application/json\";\n    event.preventDefault();  \n\n    if (format === \"xml\")\n    {\n      console.log(\"XML Body\");\n      accept = \"application/xml\";\n      const React = require('react');\n      const ReactDomServer = require(\"react-dom/server\")\n      const Film = (group) => React.createElement(\"Film\", group);\n      var elementXML = ReactDomServer.renderToStaticMarkup(<Film><id>{group.id}</id><title>{group.title}</title><year>{group.year}</year><director>{group.director}</director><stars>{group.stars}</stars><review>{group.review}</review></Film>)\n      body = elementXML;\n\n      // without id\n\n      if (!id) {\n        const FilmWithoutId = (group) =>\n          React.createElement(\"Film\", { ...group, id: undefined });\n        elementXML = ReactDomServer.renderToStaticMarkup(\n          <FilmWithoutId>\n            <title>{group.title}</title>\n            <year>{group.year}</year>\n            <director>{group.director}</director>\n            <stars>{group.stars}</stars>\n            <review>{group.review}</review>\n          </FilmWithoutId>\n        );\n      }\n    }\n\n    else if (format === \"text\")\n    {\n      accept = \"text/plain\";\n      const { title, year, director, stars, review } = group;\n      const bodyAsText = `${id}#${title}#${year}#${director}#${stars}#${review}|`;\n      body = bodyAsText;\n\n      // without id\n\n      if (!id) {\n        const { title, year, director, stars, review } = group;\n        body = `#${title}#${year}#${director}#${stars}#${review}|`;\n      }\n    }\n\n    else\n    {\n      body = JSON.stringify(group) ;\n\n      // without id\n      if (!id) {\n        const groupWithoutId = { ...group };\n        delete groupWithoutId.id;\n\n        body = JSON.stringify(groupWithoutId);\n      }\n    }\n\n    if (id) {\n    await fetch(`/FilmAPI/filmapi`, {\n        method: \"PUT\",\n        headers: {\n          Accept: accept,\n          \"Content-Type\": accept,\n        },\n        body: body,\n      });\n    } \n    \n    else {\n      await fetch(\"/FilmAPI/filmapi\", {\n        method: \"POST\",\n        headers: {\n          Accept: accept,\n          \"Content-Type\": accept,\n        },\n        body: body,\n      });\n    }\n\n    setGroup(initialFormState);\n    navigate(\"/\");\n  };\n\n  const ptitle = <h2 className=\"d-flex justify-content-center pt-5 display-6\">{id ? \"Edit Film\" : \"Add Film\"}</h2>;\n  return (\n    <div>\n      <AppNavbar />\n      <Container>\n        {ptitle}\n        <Form onSubmit={handleSubmit} id = \"form\">\n          <FormGroup className = \"pt-4 pb-4\">\n            <label>\n              Select Format\n              <select\n                name=\"format\"\n                onChange={handleFormat}\n                value={format}\n                className = \"ms-4\">\n                <option value=\"json\">JSON</option>\n                <option value=\"xml\">XML</option>\n                <option value=\"text\">Text</option>\n              </select>\n            </label>\n          </FormGroup>\n\n\n          {id && (\n          <FormGroup>\n            <Label for=\"id\">ID</Label>\n            <Input\n              type=\"text\"\n              name=\"id\"\n              id=\"id\"\n              value={idValue || \"\"}\n              onChange={handleChange}\n              autoComplete=\"id\"\n              readOnly\n            />\n          </FormGroup>\n        )}\n\n          <FormGroup>\n            <Label for=\"title\">Title</Label>\n            <Input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              value={titleValue || \"\"}\n              onChange={handleChange} \n              autoComplete=\"title\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"year\">Year</Label>\n            <Input\n              type=\"text\"\n              name=\"year\"\n              id=\"year\"\n              value={yearValue || \"\"}\n              onChange={handleChange}\n              autoComplete=\"year\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"director\">Director</Label>\n            <Input\n              type=\"text\"\n              name=\"director\"\n              id=\"director\"\n              value={directorValue || \"\"}\n              onChange={handleChange}\n              autoComplete=\"director\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"stars\">Stars</Label>\n            <Input\n              type=\"text\"\n              name=\"stars\"\n              id=\"stars\"\n              value={starsValue || \"\"}\n              onChange={handleChange}\n              autoComplete=\"stars\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"review\">Review</Label>\n            <Input\n              type=\"text\"\n              name=\"review\"\n              id=\"review\"\n              value={reviewValue || \"\"}\n              onChange={handleChange}\n              autoComplete=\"review\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Button color=\"danger\" type=\"submit\">\n              Save\n            </Button>{\" \"}\n            <Button color=\"danger\" tag={Link} to=\"/\">\n              Cancel\n            </Button>\n          </FormGroup>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default FilmEdit;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}