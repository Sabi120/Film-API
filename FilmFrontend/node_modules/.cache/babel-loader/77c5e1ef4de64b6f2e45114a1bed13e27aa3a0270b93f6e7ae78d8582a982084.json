{"ast":null,"code":"var _jsxFileName = \"/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/Films.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport AppContext from './AppContext';\nimport './buttonStyles.css';\n\n// use this for search do search in this file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Films = () => {\n  _s();\n  //var format = \n  console.log(\"AppContext in list \", AppContext.format);\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // get films\n\n  const parseXml = (xmlString, id, title, year, director, stars, review) => {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\n    // You can now access XML nodes and attributes, and convert it to a JavaScript object as needed\n    // For example, if your XML structure is like this:\n    const filmsxml = `<Films>\n      <Film>\n        <id>{id}</id>\n        <title>{title}</title>\n        <year>{year}</year>\n        <director>{director}</director>\n        <stars>{stars}</stars>\n        <review>{review}</review>\n      </Film>\n    </Films>`;\n    const films = Array.from(xmlDoc.getElementsByTagName(\"Film\")).map(film => {\n      return {\n        id: parseInt(film.getElementsByTagName(\"id\")[0].textContent, 10),\n        title: film.getElementsByTagName(\"title\")[0].textContent,\n        year: film.getElementsByTagName(\"year\")[0].textContent,\n        director: film.getElementsByTagName(\"director\")[0].textContent,\n        stars: film.getElementsByTagName(\"stars\")[0].textContent,\n        review: film.getElementsByTagName(\"review\")[0].textContent\n      };\n    });\n    return films;\n  };\n  const parseText = textString => {\n    // Assuming your text format is like this: \"1#Movie Title,2#Another Movie\"\n    const films = textString.split(\"|\").map(filmStr => {\n      const [id, title, year, director, stars, review] = filmStr.split(\"#\");\n      return {\n        id: parseInt(id, 10),\n        title: title,\n        year: year,\n        director: director,\n        stars: stars,\n        review: review\n      };\n    });\n    return films;\n  };\n  useEffect(() => {\n    setLoading(true);\n    const format = AppContext.format;\n    let accept;\n    if (format === \"xml\") {\n      accept = \"application/xml\";\n    } else if (format === \"text\") {\n      accept = \"text/plain\";\n    } else {\n      accept = \"application/json\";\n    }\n    fetch('FilmAPI/filmapi', {\n      headers: {\n        'Accept': accept\n      }\n    }).then(response => {\n      if (format === \"json\") {\n        return response.json();\n      } else if (format === \"xml\") {\n        return response.text();\n      } else {\n        return response.text();\n      }\n    }).then(data => {\n      if (format === \"xml\") {\n        data = parseXml(data);\n      } else if (format === \"text\") {\n        data = parseText(data);\n      }\n      setGroups(data);\n      setLoading(false);\n    });\n  }, []);\n\n  // original\n  // useEffect(() => {\n  //   setLoading(true);\n  //   //get use this for search\n  //   fetch('FilmAPI/filmapi', {\n  //       headers: {\n  //         'Accept': 'application/json'\n  //       }\n  //     })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       setGroups(data);\n  //       setLoading(false);\n  //     })\n  // }, []);\n\n  // original\n\n  // delete\n\n  // TRY 2\n\n  const remove = async (id, format) => {\n    let body = Request.body;\n    let accept = \"application/json\";\n    console.log(\"AppContext in remove func \", AppContext.format);\n    format = AppContext.format;\n    if (format === \"xml\") {\n      console.log(\"format === xml\");\n      accept = \"application/xml\";\n      body = `<Film><id>${id}</id></Film>`;\n    } else if (format === \"text\") {\n      console.log(\"format === text\");\n      accept = \"text/plain\";\n      body = `${id}#`;\n    } else {\n      console.log(\"format === json\");\n      accept = \"application/json\";\n      body = JSON.stringify({\n        'id': id\n      });\n    }\n    await fetch(`/FilmAPI/filmapi`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': accept,\n        'Content-Type': accept\n      },\n      body: body\n    }).then(() => {\n      let updatedGroups = [...groups].filter(i => i.id !== id);\n      setGroups(updatedGroups);\n    });\n  };\n\n  // SEPARATE\n\n  // XML Delete\n  // const remove = async (id) => {\n  //   await fetch(`/FilmAPI/filmapi`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       'Accept': 'application/xml',\n  //       'Content-Type': 'application/xml'\n  //     },\n  //     body: `<Film><id>${id}</id></Film>`\n  //   }).then(() => {\n  //     let updatedGroups = [...groups].filter(i => i.id !== id);\n  //     setGroups(updatedGroups);\n  //   });\n  // }\n\n  // Text Delete\n  // const remove = async (id) => {\n  //   const bodyAsText = `${id}#`;\n\n  //   await fetch(`/FilmAPI/filmapi`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       'Accept': 'text/plain',\n  //       'Content-Type': 'text/plain'\n  //     },\n  //     body: bodyAsText\n  //   }).then(() => {\n  //     let updatedGroups = [...groups].filter(i => i.id !== id);\n  //     setGroups(updatedGroups);\n  //   });\n  // }\n\n  // original - json\n  // const remove = async (id) => {\n  //   await fetch(`/FilmAPI/filmapi`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({'id': id})\n  //   }).then(() => {\n  //     let updatedGroups = [...groups].filter(i => i.id !== id);\n  //     setGroups(updatedGroups);\n  //   });\n  // }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center d-flex align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"pt-3\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: \"shadow\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            sx: {\n              \"& th\": {\n                color: \"white\",\n                backgroundColor: \"#212529\"\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Director\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Stars\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: groups.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.director\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.stars\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.review\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"optionsShadow\",\n                  title: \"Update\",\n                  size: \"sm\",\n                  color: \"white\",\n                  tag: Link,\n                  to: \"/films/\" + row.id,\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"\\u270D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"optionsShadow\",\n                  title: \"Delete\",\n                  size: \"sm\",\n                  color: \"white\",\n                  starticon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 105\n                  }, this),\n                  onClick: () => remove(row.id),\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(Films, \"KA4r/dXTybZF0zprFku2dmBaRvQ=\");\n_c = Films;\nexport default Films;\nvar _c;\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"names":["React","useEffect","useState","Button","Container","AppNavbar","Link","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DeleteIcon","CircularProgress","AppContext","Films","console","log","format","groups","setGroups","loading","setLoading","parseXml","xmlString","id","title","year","director","stars","review","parser","DOMParser","xmlDoc","parseFromString","filmsxml","films","Array","from","getElementsByTagName","map","film","parseInt","textContent","parseText","textString","split","filmStr","accept","fetch","headers","then","response","json","text","data","remove","body","Request","JSON","stringify","method","updatedGroups","filter","i","minWidth","color","backgroundColor","row","border"],"sources":["/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/Films.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Container } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport AppContext from './AppContext';\n\nimport './buttonStyles.css';\n\n // use this for search do search in this file\nconst Films = () => {\n\n  //var format = \n  console.log(\"AppContext in list \",AppContext.format);\n\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // get films\n\n  const parseXml = (xmlString, id, title, year, director, stars, review) => {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\n    // You can now access XML nodes and attributes, and convert it to a JavaScript object as needed\n    // For example, if your XML structure is like this:\n    const filmsxml = \n    `<Films>\n      <Film>\n        <id>{id}</id>\n        <title>{title}</title>\n        <year>{year}</year>\n        <director>{director}</director>\n        <stars>{stars}</stars>\n        <review>{review}</review>\n      </Film>\n    </Films>`\n    const films = Array.from(xmlDoc.getElementsByTagName(\"Film\")).map(film => {\n      return {\n        id: parseInt(film.getElementsByTagName(\"id\")[0].textContent, 10),\n        title: film.getElementsByTagName(\"title\")[0].textContent,\n        year: film.getElementsByTagName(\"year\")[0].textContent,\n        director: film.getElementsByTagName(\"director\")[0].textContent,\n        stars: film.getElementsByTagName(\"stars\")[0].textContent,\n        review: film.getElementsByTagName(\"review\")[0].textContent\n      };\n    });\n  \n    return films;\n  };\n\n  const parseText = (textString) => {\n    // Assuming your text format is like this: \"1#Movie Title,2#Another Movie\"\n    const films = textString.split(\"|\").map(filmStr => {\n      const [id, title, year, director, stars, review] = filmStr.split(\"#\");\n      return {\n        id: parseInt(id, 10),\n        title: title,\n        year: year,\n        director: director,\n        stars: stars,\n        review: review\n      };\n    });\n  \n    return films;\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  \n    const format = AppContext.format;\n    let accept;\n  \n    if (format === \"xml\") {\n      accept = \"application/xml\";\n    } else if (format === \"text\") {\n      accept = \"text/plain\";\n    } else {\n      accept = \"application/json\";\n    }\n  \n    fetch('FilmAPI/filmapi', {\n        headers: {\n          'Accept': accept\n        }\n      })\n      .then(response => {\n        if (format === \"json\") {\n          return response.json();\n        } else if (format === \"xml\") {\n          return response.text();\n        } else {\n          return response.text();\n        }\n      })\n      .then(data => {\n        if (format === \"xml\") {\n          data = parseXml(data);\n        } else if (format === \"text\") {\n          data = parseText(data);\n        }\n        setGroups(data);\n        setLoading(false);\n      })\n  }, []);\n  \n\n  // original\n  // useEffect(() => {\n  //   setLoading(true);\n  //   //get use this for search\n  //   fetch('FilmAPI/filmapi', {\n  //       headers: {\n  //         'Accept': 'application/json'\n  //       }\n  //     })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       setGroups(data);\n  //       setLoading(false);\n  //     })\n  // }, []);\n\n  // original\n\n  // delete\n\n  // TRY 2\n\n  const remove = async (id, format) => {\n    let body = Request.body;\n    let accept = \"application/json\";\n    console.log(\"AppContext in remove func \",AppContext.format);\n    format = AppContext.format\n    if (format === \"xml\") {\n      console.log(\"format === xml\");\n      accept = \"application/xml\";\n      body = `<Film><id>${id}</id></Film>`;\n    } \n    \n    else if (format === \"text\") {\n      console.log(\"format === text\");\n      accept = \"text/plain\";\n      body = `${id}#`;\n    }\n    \n    else {\n      console.log(\"format === json\");\n      accept = \"application/json\";\n      body = JSON.stringify({'id': id});\n    }\n  \n    await fetch(`/FilmAPI/filmapi`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': accept,\n        'Content-Type': accept\n      },\n      body: body\n    }).then(() => {\n      let updatedGroups = [...groups].filter(i => i.id !== id);\n      setGroups(updatedGroups);\n    });\n  }\n\n\n  // SEPARATE\n\n\n  // XML Delete\n  // const remove = async (id) => {\n  //   await fetch(`/FilmAPI/filmapi`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       'Accept': 'application/xml',\n  //       'Content-Type': 'application/xml'\n  //     },\n  //     body: `<Film><id>${id}</id></Film>`\n  //   }).then(() => {\n  //     let updatedGroups = [...groups].filter(i => i.id !== id);\n  //     setGroups(updatedGroups);\n  //   });\n  // }\n\n  // Text Delete\n  // const remove = async (id) => {\n  //   const bodyAsText = `${id}#`;\n  \n  //   await fetch(`/FilmAPI/filmapi`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       'Accept': 'text/plain',\n  //       'Content-Type': 'text/plain'\n  //     },\n  //     body: bodyAsText\n  //   }).then(() => {\n  //     let updatedGroups = [...groups].filter(i => i.id !== id);\n  //     setGroups(updatedGroups);\n  //   });\n  // }\n\n\n  // original - json\n  // const remove = async (id) => {\n  //   await fetch(`/FilmAPI/filmapi`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({'id': id})\n  //   }).then(() => {\n  //     let updatedGroups = [...groups].filter(i => i.id !== id);\n  //     setGroups(updatedGroups);\n  //   });\n  // }\n\n  if (loading) {\n\n    return (\n      <div className='d-flex justify-content-center d-flex align-items-center'>\n        <CircularProgress color = \"error\"/>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <AppNavbar />\n      <Container fluid className = \"pt-3\">\n\n        <TableContainer component={Paper} className='shadow'>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead\n             sx={{\n              \"& th\": {\n                color: \"white\",\n                backgroundColor: \"#212529\"\n              }\n            }}>\n              <TableRow>\n                <TableCell><b>ID</b></TableCell>\n                <TableCell align=\"left\"><b>Title</b></TableCell>\n                <TableCell align=\"left\"><b>Year</b></TableCell>\n                <TableCell align=\"left\"><b>Director</b></TableCell>\n                <TableCell align=\"left\"><b>Stars</b></TableCell>\n                <TableCell align=\"left\"><b>Review</b></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {groups.map((row) => (\n                <TableRow\n                  key={row.id}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.title}</TableCell>\n                  <TableCell align=\"left\">{row.year}</TableCell>\n                  <TableCell align=\"left\">{row.director}</TableCell>\n                  <TableCell align=\"left\">{row.stars}</TableCell>\n                  <TableCell align=\"left\">{row.review}</TableCell>\n\n                  <TableCell align=\"left\">\n                    <Button className=\"optionsShadow\" title=\"Update\" size=\"sm\" color=\"white\" tag={Link} to={\"/films/\" + row.id}>\n                      <h5>&#9997;</h5>\n                    </Button>\n                  </TableCell>\n\n                  <TableCell align=\"left\">\n                    <Button className=\"optionsShadow\" title=\"Delete\" size=\"sm\" color=\"white\" starticon={<DeleteIcon />} onClick={() => remove(row.id)}>\n                      <h5>&#10060;</h5>\n                    </Button>\n                  </TableCell>\n\n              \n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n      { }\n    </div>\n  );\n};\n\nexport default Films;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}