{"ast":null,"code":"var _jsxFileName = \"/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/Format.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, FormGroup, Input } from 'reactstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Format = () => {\n  _s();\n  const [format, setFormat] = useState('format');\n  const navigate = useNavigate();\n  const handleFormat = event => {\n    setFormat(event.target.value);\n  };\n  const handleSubmit = async event => {\n    let accept = \"application/json\";\n    event.preventDefault();\n    console.log(format);\n    if (format === \"xml\") {\n      accept = \"application/xml\";\n    } else if (format === \"text\") {\n      accept = \"text/plain\";\n    } else {\n      accept = \"application/json\";\n    }\n    await fetch(`/FilmRestful/filmapi`, {\n      method: \"GET\",\n      headers: {\n        Accept: accept,\n        \"Content-Type\": accept\n      }\n    });\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    className: \"ms-4 me-3 row pt-4\",\n    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"formatType\",\n        value: format,\n        onChange: handleFormat,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"year\",\n          children: \"XML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(Format, \"UhTABZq0Nzk6pWcZhjKCnL9DVJw=\", false, function () {\n  return [useNavigate];\n});\n_c = Format;\nexport default Format;\nvar _c;\n$RefreshReg$(_c, \"Format\");","map":{"version":3,"names":["React","useState","Form","FormGroup","Input","useNavigate","Format","format","setFormat","navigate","handleFormat","event","target","value","handleSubmit","accept","preventDefault","console","log","fetch","method","headers","Accept"],"sources":["/Users/spatel46/Documents/Enterprise Programming/Assignment/sabihapatel20060719/FilmFrontend/src/Format.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, FormGroup, Input } from 'reactstrap';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n  const Format = () => {\r\n\r\n    const [format, setFormat] = useState('format');\r\n    const navigate = useNavigate();\r\n\r\n    const handleFormat = (event) => {\r\n      setFormat(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n\r\n      let accept = \"application/json\";\r\n      event.preventDefault();  \r\n      console.log(format);\r\n\r\n      if (format === \"xml\")\r\n      {\r\n        accept = \"application/xml\";\r\n      }\r\n\r\n      else if (format === \"text\")\r\n      {\r\n        accept = \"text/plain\";\r\n      }\r\n\r\n\r\n      else \r\n      {\r\n        accept = \"application/json\";\r\n      }\r\n\r\n     await fetch(`/FilmRestful/filmapi`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: accept,\r\n          \"Content-Type\": accept,\r\n        },\r\n        \r\n      })\r\n\r\n      navigate(\"/\");\r\n\r\n    };\r\n  \r\n    return (\r\n     \r\n      <Form onSubmit={handleSubmit} className = \"ms-4 me-3 row pt-4\"> \r\n\r\n        <FormGroup>\r\n          <Input \r\n            type=\"select\" \r\n            name=\"formatType\" \r\n            value={format} \r\n            onChange={handleFormat}\r\n          >\r\n              <option value=\"title\">JSON</option>\r\n              <option value=\"year\">XML</option>\r\n              <option value=\"all\">Text</option>\r\n          </Input>\r\n        </FormGroup>\r\n\r\n      </Form>\r\n\r\n    );\r\n  };\r\n  \r\n  export default Format;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,SAAS,EAAEC,KAAK,QAAQ,YAAY;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE7C,MAAMC,MAAM,GAAG,MAAM;EAAA;EAEnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAMQ,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9BH,SAAS,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IAEpC,IAAII,MAAM,GAAG,kBAAkB;IAC/BJ,KAAK,CAACK,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;IAEnB,IAAIA,MAAM,KAAK,KAAK,EACpB;MACEQ,MAAM,GAAG,iBAAiB;IAC5B,CAAC,MAEI,IAAIR,MAAM,KAAK,MAAM,EAC1B;MACEQ,MAAM,GAAG,YAAY;IACvB,CAAC,MAID;MACEA,MAAM,GAAG,kBAAkB;IAC7B;IAED,MAAMI,KAAK,CAAE,sBAAqB,EAAE;MACjCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAEP,MAAM;QACd,cAAc,EAAEA;MAClB;IAEF,CAAC,CAAC;IAEFN,QAAQ,CAAC,GAAG,CAAC;EAEf,CAAC;EAED,oBAEE,QAAC,IAAI;IAAC,QAAQ,EAAEK,YAAa;IAAC,SAAS,EAAG,oBAAoB;IAAA,uBAE5D,QAAC,SAAS;MAAA,uBACR,QAAC,KAAK;QACJ,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,YAAY;QACjB,KAAK,EAAEP,MAAO;QACd,QAAQ,EAAEG,YAAa;QAAA,wBAErB;UAAQ,KAAK,EAAC,OAAO;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eACnC;UAAQ,KAAK,EAAC,MAAM;UAAA,UAAC;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS,eACjC;UAAQ,KAAK,EAAC,KAAK;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAC7B;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QAEP;AAGX,CAAC;AAAC,GAhEIJ,MAAM;EAAA,QAGOD,WAAW;AAAA;AAAA,KAHxBC,MAAM;AAkEZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}